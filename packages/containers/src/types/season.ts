// Generated by https://quicktype.io

export interface Season {
  season_name: string;
  series: SeasonSeries[];
  special_events: SpecialEvent[];
}

export interface SeasonSeries {
  simulation: Simulation;
  icon: Icon;
  sim_id: number;
  series: CurrentlyActiveSeries[];
}

export enum Icon {
  AssetsImgSimsAccPNG = '/assets/img/sims/acc.png',
  AssetsImgSimsRf2PNG = '/assets/img/sims/rf2.png',
}

export interface CurrentlyActiveSeries {
  eventindex: number;
  series_name: string;
  short_name: string;
  min_license: MinLicense;
  min_sr: number;
  max_sr: number;
  min_sr_lic: null;
  min_elo: number;
  race_length: number;
  thumbnail: string;
  event_id: number;
  sponsorlink: string;
  sponsorbanner: string;
  settings: PurpleSettings;
  team_event: number;
  prizes: number;
  prize_html_de: string;
  prize_html_en: string;
  fixed_car: number;
  active_track: boolean | ActiveTrackClass;
  slug: string;
  website_short_text: string;
  penalty_points_active: number;
  elo_factor: number;
  simulation: Simulation;
  sim_icon: Icon;
  content_needed: ContentNeeded[];
  class_license_req: any[] | { [key: string]: ClassLicenseReqValue };
  next_race: boolean | string;
  season_special_event: number;
  unlocked: boolean;
  sim_id: number;
  special_badge: SpecialBadge;
  active_week: number;
  practice_server?: PracticeServer;
  practice_server_next_week?: PracticeServer;
}

export interface ActiveTrackClass {
  track_id: number;
  track_name: string;
  track_year: number;
  acc_track_name: string;
  thumbnail: string;
  trackmap: string;
  country: string;
  turns: number;
  km: number;
  track_guide_video: string;
  turn_factor: string;
  city: string;
  openweather_city_id: number;
  sim_id: number;
  non_base_content: number;
  content_link: null | string;
  content_link_name: null | string;
  sim_settings: string;
  map: string;
}

export enum ClassLicenseReqValue {
  ClassLicenseReqIRON = 'IRON+',
  Iron = 'IRON',
}

export interface ContentNeeded {
  link: string;
  type: number;
  name: string;
}

export enum MinLicense {
  Bronze = 'BRONZE+',
  Iron = 'IRON',
  Rookie = 'ROOKIE',
}

export interface PracticeServer {
  link: string;
  rfrunning: string;
}

export interface PurpleSettings {
  championship_settings: ChampionshipSettings;
  discord_penalty_webhook: string;
  discord_reporting_channel_webhook: string;
  season_event_settings: PurpleSeasonEventSettings;
  seasonSessionConfig?: SeasonSessionConfig;
  workshop?: any[];
  class_license_req?: { [key: string]: ClassLicenseReqValue };
}

export interface ChampionshipSettings {
  teams: number;
  car_classes: CarClass[];
}

export interface CarClass {
  class: string;
  point_system: number[];
  cup_classes_active: number;
}

export interface SeasonSessionConfig {
  weeks: number;
  weekDays: number;
  sessionDays: number[];
  timeSlots: TimeSlots;
  realWeatherSlots: Array<number | string>;
}

export interface TimeSlots {
  EU: Array<number | string>;
  NA: Array<number | string>;
}

export interface PurpleSeasonEventSettings {
  car_class: string;
  first_slot: number;
  daily_races: number;
  races_every: number;
  week_schedule: string[];
  slots_per_race: number;
  standard_points_sof: number;
  default_server_settings: PurpleDefaultServerSettings;
  practice_server?: number;
  practice_server_next_week?: number;
  class_settings?: { [key: string]: ClassSetting };
  week_rfms?: string[];
}

export interface ClassSetting {
  max_split_size: number;
  split_threshold: number;
  max_slots: number;
}

export interface PurpleDefaultServerSettings {
  race: Qualifying;
  weather: PurpleWeather;
  practice: Practice;
  qualifying: Qualifying;
  pitstop_mandatory?: number;
  refueling_allowed?: number;
  refueling_mandatory?: number;
  refueling_time_fixed?: number;
  tire_change_mandatory?: number;
  formation_lap_time?: number;
  short_formation_lap?: number;
  pitwindow?: number;
  car_class?: string;
  max_stint_time?: number;
  max_drivers?: number;
  maxTotalDrivingTime?: number;
  fixedSetups?: boolean | number;
  fixedUpgrades?: boolean | number;
  formationLap?: number;
  privateQualifying?: boolean | number;
  rejoin?: number;
  fuelMultiplier?: number;
  tirewearMultiplier?: number;
  gridTime?: number;
}

export interface Practice {
  day: number;
  hour: number;
  length: number;
}

export interface Qualifying {
  day: number;
  hour: number[];
  length: number;
  pre_race_waiting_time?: number;
}

export interface PurpleWeather {
  rain?: number;
  clouds?: number;
  randomness?: number;
  average_temperature?: number;
  rain_possible?: boolean | string;
  random?: number[];
}

export enum Simulation {
  AssettoCorsaCompetizione = 'Assetto Corsa Competizione',
  RFactor2 = 'rFactor2',
}

export enum SpecialBadge {
  AssetsImgGrandFinalsQualifyerPNG = '/assets/img/grand-finals-qualifyer.png',
  Empty = '',
}

export interface SpecialEvent {
  simulation: Simulation;
  icon: Icon;
  sim_id: number;
  series: SpecialEventSeries[];
}

export interface SpecialEventSeries {
  eventindex: number;
  series_name: string;
  short_name: string;
  min_license: MinLicense;
  min_sr: number;
  max_sr: number;
  min_sr_lic: null;
  min_elo: number;
  race_length: number;
  thumbnail: string;
  event_id: number;
  sponsorlink: string;
  sponsorbanner: string;
  settings: FluffySettings;
  team_event: number;
  prizes: number;
  prize_html_de: string;
  prize_html_en: string;
  fixed_car: number;
  active_track: boolean | ActiveTrackClass;
  slug: string;
  website_short_text: string;
  penalty_points_active: number;
  elo_factor: number;
  simulation: Simulation;
  sim_icon: Icon;
  content_needed: ContentNeeded[];
  class_license_req: any[] | { [key: string]: ClassLicenseReqValue };
  next_race: boolean | string;
  season_special_event: number;
  unlocked: boolean;
  sim_id: number;
  special_badge: string;
  active_week: number;
  practice_server?: PracticeServer;
  practice_server_next_week?: PracticeServer;
}

export interface FluffySettings {
  championship_settings: ChampionshipSettings;
  discord_penalty_webhook: string;
  discord_reporting_channel_webhook: string;
  season_event_settings: FluffySeasonEventSettings;
  team_practice_server?: number;
  auto_restart?: boolean;
  every_hour?: boolean;
  practice_server_name?: string;
  workshop?: any[];
  class_license_req?: { [key: string]: ClassLicenseReqValue };
}

export interface FluffySeasonEventSettings {
  car_class: string;
  first_slot: number;
  daily_races: number;
  races_every: number;
  signup_start?: SignupStart;
  signup_start_patreon?: SignupStart;
  week_schedule: string[];
  slots_per_race: number;
  standard_points_sof: number;
  default_server_settings: FluffyDefaultServerSettings;
  class_settings?: { [key: string]: ClassSetting };
  practice_server?: number;
  practice_server_next_week?: number;
  week_rfms?: string[];
}

export interface FluffyDefaultServerSettings {
  race: Qualifying;
  weather: FluffyWeather;
  practice: Practice;
  qualifying: Qualifying;
  pitstop_mandatory?: number;
  refueling_allowed?: number;
  refueling_mandatory?: number;
  refueling_time_fixed?: number;
  tire_change_mandatory?: number;
  driver_change_required?: number;
  formation_lap_time?: number;
  short_formation_lap?: number;
  car_class?: string;
  fixedSetups?: boolean;
  fixedUpgrades?: boolean;
  formationLap?: number;
  privateQualifying?: number;
  rejoin?: number;
  fuelMultiplier?: number;
  tirewearMultiplier?: number;
}

export interface FluffyWeather {
  rain?: number;
  clouds?: number;
  randomness?: number;
  average_temperature?: number;
  rain_possible?: string;
  random?: number[];
}

export interface SignupStart {
  metric: string;
  amount: number;
}
